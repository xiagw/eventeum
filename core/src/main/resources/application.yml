server:
  tomcat:
    uri-encoding: UTF-8
  port: 8060

logging:
  level:
    org.springframework.web: ERROR
    net.consensys: DEBUG
    net.consensys.configs: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5p %c: %M - %m%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5p %c: %M - %m%n"
  file: /logs/application.log

ethereum:
  nodes:
    - name: default
      url: http://localhost:8545
      pollingInterval: ${POLLING_INTERVAL:10000}

  healthcheck:
    pollInterval: 2000

#eventFilters:
#  - id: RequestCreated
#    contractAddress: ${CONTRACT_ADDRESS:0x4aecf261541f168bb3ca65fa8ff5012498aac3b8}
#    eventSpecification:
#      eventName: RequestCreated
#      indexedParameterDefinitions:
#        - position: 0
#          type: BYTES32
#        - position: 1
#          type: ADDRESS
#      nonIndexedParameterDefinitions:
#        - position: 2
#          type: BYTES32
#    correlationId:
#      type: NON_INDEXED_PARAMETER
#      index: 0

#transactionFilters:
#- nodeName: ${ETHEREUM_NETWORK:default}
#  type: "FROM_ADDRESS"
#  transactionIdentifierValue: ${CONTRACT_ADDRESS_EM_TOKEN:0x0f8E7A681019Ec13EfE853a6Eca666E05b214Fd5}
#  statuses: ['CONFIRMED']
#- nodeName: ${ETHEREUM_NETWORK:default}
#  type: "TO_ADDRESS"
#  transactionIdentifierValue: ${CONTRACT_ADDRESS_EM_TOKEN:0xfBAB8dE62002c86986C6e070BD3bB46BF983C74e}
#  statuses: ['FAILED']


eventStore:
  type: DB
  url: http://localhost:8081/api/rest/v1
  eventPath: /event
database:
  type: SQL

broadcaster:
  type: PULSAR
  cache:
    expirationMillis: 6000000
  event:
    confirmation:
      numBlocksToWait: 12
      numBlocksToWaitForMissingTx: 100
      numBlocksToWaitBeforeInvalidating: 2
  multiInstance: false
  bytesToAscii: false

# For pulsar
pulsar:
  # See https://github.com/apache/pulsar/blob/master/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ClientConfigurationData.java
  # for available options
  config:
    serviceUrl: pulsar://localhost:6650

  # To enable authentication, uncomment this following section
  # authentication:
  #   plugin-class-name: org.apache.pulsar.client.impl.auth.AuthenticationBasic
  #   params:
  #     userId: my-username
  #     password: my-password

  # Topic can also be set to 'just the name' (which will default to tenant 'public' and namespace 'default')
  topic:
    blockEvents: persistent://public/default/block-events
    contractEvents: persistent://public/default/contract-events
    transactionEvents: persistent://public/default/transaction-events

# For Kafka
zookeeper:
  address: ${ZOOKEEPER_ADDRESS:localhost:2181}
kafka:
  bootstrap:
    addresses: ${KAFKA_ADDRESSES:localhost:9092}
  topic:
    contractEvents: contract-events
    blockEvents: block-events
    eventeumEvents: eventeum-events
  request:
    timeout:
      msConfig: ${KAFKA_REQUEST_TIMEOUT_MS:20000}
  retry:
    backoff:
      msConfig: ${KAFKA_RETRY_BACKOFF_MS:500}
  endpoint:
    identification:
      algorithm: ${KAFKA_ENDPOINT_IDENTIFICATION_ALGORITHM:null}
  sasl:
    mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
    username: ${KAFKA_USERNAME:""}
    password: ${KAFKA_PASSWORD:""}
  security:
    protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
  retries: ${KAFKA_RETRIES:10}

# spring PostgreSQL
spring:
  # Database
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/eventeum
    username: postgres
    password: password
  # JPA properties
  jpa:
    hibernate:
      ddl-auto: update # When you launch the application for the first time - switch "none" at "create"
    show-sql: true
    database: eventeum
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true
  # Logger configuration
  logging:
    pattern:
      console: "%d %-5level %logger : %msg%n"
    level:
      org.springframework: info
      org.hibernate: debug
  #     jdbc:
  #       lob:
  #         # For postgres, see: https://github.com/pgjdbc/pgjdbc/issues/1102
  #         non_contextual_creation: true