server:
  tomcat:
    uri-encoding: UTF-8
  port: 8060

logging:
  level:
    org.springframework.web: ERROR
    net.consensys: DEBUG
    net.consensys.configs: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5p %c: %M - %m%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5p %c: %M - %m%n"
  file: /logs/application.log

ethereum:
  nodes:
  - name: default
#    url: ${ETHEREUM_NODE_URL:wss://mainnet.infura.io/ws/v3/6d00f1fc08d84be7a25d76996d16550b}
    url: ${ETHEREUM_NODE_URL:http://localhost:8545}
    blockStrategy: POLL
    syncingThreshold: 100
    healthcheckInterval: 5000
    maxBlocksToSync: 0
  healthcheck:
    pollInterval: 5000
  blockStrategy: POLL
  numBlocksToReplay: 12
  sync:
    batchSize: 100000

#eventFilters:
#  - id: CryptoKittiesTransfer
#    contractAddress: "0x06012c8cf97bead5deae237070f9587f8e7a266d"
#    eventSpecification:
#      eventName: Transfer
#      nonIndexedParameterDefinitions:
#        - position: 0
#          type: ADDRESS
#        - position: 1
#          type: ADDRESS
#        - position: 2
#          type: UINT256
#
#    correlationId:
#      type: NON_INDEXED_PARAMETER
#      index: 2
#    startBlock: 10330000

#transactionFilters:
#- nodeName: ${ETHEREUM_NETWORK:default}
#  type: "TO_ADDRESS"
#  transactionIdentifierValue: "0x06012c8cf97bead5deae237070f9587f8e7a266d"

eventStore:
  type: DB
  url: http://localhost:8081/api/rest/v1
  eventPath: /event
  latestBlockPath: /latestblock
database:
  type: SQL

broadcaster:
  type: PULSAR
  cache:
    expirationMillis: 6000000
  event:
    confirmation:
      numBlocksToWait: 12
      numBlocksToWaitForMissingTx: 100
      numBlocksToWaitBeforeInvalidating: 2
  multiInstance: false
  enableBlockNotifications: true


# pulsar
pulsar:
  # See https://github.com/apache/pulsar/blob/master/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ClientConfigurationData.java
  # for available options
  config:
    serviceUrl: pulsar://localhost:6650

  # To enable authentication, uncomment this following section
  # authentication:
  #   plugin-class-name: org.apache.pulsar.client.impl.auth.AuthenticationBasic
  #   params:
  #     userId: my-username
  #     password: my-password

  # Topic can also be set to 'just the name' (which will default to tenant 'public' and namespace 'default')
  topic:
    blockEvents: persistent://public/default/block-events
    contractEvents: persistent://public/default/contract-events
    transactionEvents: persistent://public/default/transaction-events

# spring PostgreSQL
spring:
  # Database
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/eventeum
    username: postgres
    password: password
  # JPA properties
  jpa:
    hibernate:
      ddl-auto: update # When you launch the application for the first time - switch "none" at "create"
    show-sql: true
    database: eventeum
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    generate-ddl: true
  # Logger configuration
  logging:
    pattern:
      console: "%d %-5level %logger : %msg%n"
    level:
      org.springframework: info
      org.hibernate: debug
  #     jdbc:
  #       lob:
  #         # For postgres, see: https://github.com/pgjdbc/pgjdbc/issues/1102
  #         non_contextual_creation: true

# For Kafka
zookeeper:
  address: ${ZOOKEEPER_ADDRESS:localhost:2181}
kafka:
  bootstrap:
    addresses: ${KAFKA_ADDRESSES:localhost:9092}
  topic:
    contractEvents: contract-events
    blockEvents: block-events
    eventeumEvents: eventeum-events
    transactionEvents: transaction-events

    partitions: 1
    replicationSets: 1


management:
  endpoints:
    web.base-path: /monitoring
    enabled-by-default: false
    web.exposure.include: "*"
  endpoint:
    health:
      enabled: true
      show-details: always
    metrics:
      enabled: false
    prometheus:
      enabled: false
  metrics:
    export:
      prometheus:
        enabled: false

